"Accountability", "Control of Corruption",
"Ethical behavior of firms", "Property rights",
"Political Stability", "Functioning of government",
"Cultural Diversity",
"Ethnic Fractionalization", "Language Fractionalization",
"Institucional Efficiency", "Ethnic_linguistic Plurality")
write.table(analysis_data, "analysis_data.csv", sep = ";", row.names = F)
#============
# Rename database variables model 2
colnames(analysis_data_2) <- c("Civil Liberties 1",
"Favoritism in decisions of government officials",
"Accountability", "Control of Corruption",
"Ethical behavior of firms", "Property rights",
"Political Stability", "Functioning of government",
"Cultural Diversity",
"Ethnic Fractionalization", "Language Fractionalization",
"Institucional Efficiency", "Ethnic_linguistic Plurality")
write.table(analysis_data_2, "analysis_data_2.csv", sep = ";", row.names = F)
#============
# Rename database variables model 3
colnames(analysis_data_3) <- c("Civil Liberties 2", "Confidence in Government",
"Favoritism in decisions of government officials",
"Accountability", "Control of Corruption",
"Ethical behavior of firms", "Property rights",
"Political Stability", "Functioning of government",
"Cultural Diversity",
"Ethnic Fractionalization", "Language Fractionalization",
"Institucional Efficiency", "Ethnic_linguistic Plurality")
write.table(analysis_data_3, "analysis_data_3.csv", sep = ";", row.names = F)
#============
# Rename database variables model 4
colnames(analysis_data_4) <- c("Civil Liberties 2",
"Favoritism in decisions of government officials",
"Accountability", "Control of Corruption",
"Ethical behavior of firms", "Property rights",
"Political Stability", "Functioning of government",
"Cultural Diversity",
"Ethnic Fractionalization", "Language Fractionalization",
"Institucional Efficiency", "Ethnic_linguistic Plurality")
write.table(analysis_data_4, "analysis_data_4.csv", sep = ";", row.names = F)
#=============================
# Save database models 1 through 4 with renamed variables
# model 1
write.table(analysis_data, "analysis_data.csv", sep = ";", row.names = F)
# model 2
write.table(analysis_data_2, "analysis_data_2.csv", sep = ";", row.names = F)
# model 3
write.table(analysis_data_3, "analysis_data_3.csv", sep = ";", row.names = F)
# model 4
write.table(analysis_data_4, "analysis_data_4.csv", sep = ";", row.names = F)
# Generate correlation matrix - model 1
cormat <- cor(analysis_data[, -c(1:4)])
melted_cormat <- melt(cormat)
# Correlation matrix graph - model 1
ggplot(data = melted_cormat,
aes(x=`Var1`, y=`Var2`, fill=value)) +
geom_tile()
# Factorial Analysis (PCA)
#=======================================
# Model 1
pca1 <- princomp(analysis_data[, -c(1:4)], scores=TRUE, cor=TRUE)
# Sumario do PCA
summary(pca1)
# Loading main Components
loadings(pca1)
# Checking how many factors should we use
plot(pca1) # cotovelo em 2 fatores
# Selecting the 2 factors - template 1
analysis_data$fac1 <- pca1$scores[,1]
analysis_data$fac2 <- pca1$scores[,2]
# Scree plot of eigenvalues
screeplot(pca1, type="line", main="Scree Plot")
abline(1,0, lty=2)
# Descriptive of factors 1 and 2
summary(analysis_data$`Institucional Efficiency`)
summary(analysis_data$`Ethnic_linguistic Plurality`)
ggplot(analysis_data, aes(x = `Ethnic_linguistic Plurality`, y = `Institucional Efficiency`)) +
geom_point() +
geom_vline(xintercept = 0, size =1, linetype = "dashed") +
geom_hline(yintercept = 0, size =1, linetype = "dashed") +
labs(x = "Ethnic_linguistic Plurality", y = "Institutional Efficiency")
# Multivariate Linear Regression Model 1
model_1 <- lm(`Civil Liberties 1` ~ `Confidence in Government` +
`Favoritism in decisions of government officials` +
`Accountability` +
`Institucional Efficiency` +
`Ethnic_linguistic Plurality` ,
data = analysis_data)
#=================
# Multivariate Linear Regression Model 2 - drop Confidence in Government
model_2 <- lm(`Civil Liberties 1` ~  +
`Favoritism in decisions of government officials` +
`Accountability` +
`Institucional Efficiency` +
`Ethnic_linguistic Plurality` ,
data = analysis_data_2)
#============
# Multivariate Linear Regression Model 3
model_3 <- lm(`Civil Liberties 2` ~ `Confidence in Government` +
`Favoritism in decisions of government officials` +
`Accountability` +
`Institucional Efficiency` +
`Ethnic_linguistic Plurality` ,
data = analysis_data_3)
#==============
# Multivariate Linear Regression Model 4 - drop Confidence in Government
model_4 <- lm(`Civil Liberties 2` ~  +
`Favoritism in decisions of government officials` +
`Accountability` +
`Institucional Efficiency` +
`Ethnic_linguistic Plurality` ,
data = analysis_data_4)
# Graph for the representation of the confidence intervals of the estimated coefficients - model 1
par(mfrow=c(1,1))
betas <- coefficients(model_1)
IC <-  confint(model_1, level=0.95)
y.axis <- seq(from=1, to=length(betas))
plot(betas, y.axis, type="p", pch=19, xlab="Magnitud of Coefficients", ylab="",
axes=F, xlim=c(min(IC-.4), max(IC+.4)), ylim=c(min(y.axis-.2), max(y.axis+.2)),
cex=1,yaxs="i",xaxs="i")
segments(IC[,1], y.axis, IC[,2], y.axis)
axis(1, at=seq(round(min(IC-.9)), round(max(IC+.9)), by=0.1),
labels=seq(round(min(IC-.9)), round(max(IC+.9)), by=0.1), tick=T, cex.axis=1,
mgp=c(2,.7,0))
axis(2, at=y.axis, label=names(betas), las=1, tick=T, line=-.5, cex.axis=1,
mgp=c(2,.7,0))
abline(v=0, lty=2, col="red")
# Graph for the representation of the confidence intervals of the estimated coefficients - model 2
par(mfrow=c(1,1))
betas <- coefficients(model_2)
IC <-  confint(model_2, level=0.95)
y.axis <- seq(from=1, to=length(betas))
plot(betas, y.axis, type="p", pch=19, xlab="Magnitude of Coefficients", ylab="",
axes=F, xlim=c(min(IC-.4), max(IC+.4)), ylim=c(min(y.axis-.2), max(y.axis+.2)),
cex=1,yaxs="i",xaxs="i")
segments(IC[,1], y.axis, IC[,2], y.axis)
axis(1, at=seq(round(min(IC-.9)), round(max(IC+.9)), by=0.1),
labels=seq(round(min(IC-.9)), round(max(IC+.9)), by=0.1), tick=T, cex.axis=1,
mgp=c(2,.7,0))
axis(2, at=y.axis, label=names(betas), las=1, tick=T, line=-.5, cex.axis=1,
mgp=c(2,.7,0))
abline(v=0, lty=2, col="red")
# Graph for the representation of the confidence intervals of the estimated coefficients - model 3
par(mfrow=c(1,1))
betas <- coefficients(model_3)
IC <-  confint(model_3, level=0.95)
y.axis <- seq(from=1, to=length(betas))
plot(betas, y.axis, type="p", pch=19, xlab="Magnitude of Coefficients", ylab="",
axes=F, xlim=c(min(IC-.4), max(IC+.4)), ylim=c(min(y.axis-.2), max(y.axis+.2)),
cex=1,yaxs="i",xaxs="i")
segments(IC[,1], y.axis, IC[,2], y.axis)
axis(1, at=seq(round(min(IC-.9)), round(max(IC+.9)), by=0.1),
labels=seq(round(min(IC-.9)), round(max(IC+.9)), by=0.1), tick=T, cex.axis=1,
mgp=c(2,.7,0))
axis(2, at=y.axis, label=names(betas), las=1, tick=T, line=-.5, cex.axis=1,
mgp=c(2,.7,0))
abline(v=0, lty=2, col="red")
# Graph for the representation of the confidence intervals of the estimated coefficients - model 3
par(mfrow=c(1,1))
betas <- coefficients(model_4)
IC <-  confint(model_4, level=0.95)
y.axis <- seq(from=1, to=length(betas))
plot(betas, y.axis, type="p", pch=19, xlab="Magnitude of Coefficients", ylab="",
axes=F, xlim=c(min(IC-.4), max(IC+.4)), ylim=c(min(y.axis-.2), max(y.axis+.2)),
cex=1,yaxs="i",xaxs="i")
segments(IC[,1], y.axis, IC[,2], y.axis)
axis(1, at=seq(round(min(IC-.9)), round(max(IC+.9)), by=0.1),
labels=seq(round(min(IC-.9)), round(max(IC+.9)), by=0.1), tick=T, cex.axis=1,
mgp=c(2,.7,0))
axis(2, at=y.axis, label=names(betas), las=1, tick=T, line=-.5, cex.axis=1,
mgp=c(2,.7,0))
abline(v=0, lty=2, col="red")
### Evaluating homoscedasticity ###
# Residual analysis of multivariate linear regression model 1
analysis_data$Predicted <- predict(model_1)
analysis_data$Residuo <- analysis_data$`Civil Liberties 1` - analysis_data$Predicted
# Test of the mean value of the error term equal to zero
summary(analysis_data$Residuo)
# Scatter plot of standard residues - model 1
plot(analysis_data$Predicted, analysis_data$Residuo, pch=21, bg="red", col="red")
abline(0,0, lty = 2)
### Evaluating homoscedasticity ###
# Residual analysis of multivariate linear regression model 2
analysis_data_2$Predicted <- predict(model_2)
analysis_data_2$Residuo <- analysis_data_2$`Civil Liberties 1` - analysis_data_2$Predicted
# Test of the mean value of the error term equal to zero
summary(analysis_data_2$Residuo)
# Scatter plot of standard residues - model 2
plot(analysis_data_2$Predicted, analysis_data_2$Residuo, pch=21, bg="red", col="red")
abline(0,0, lty = 2)
### Test for Collinearity ###
vif(model_1) # variance inflation factors
sqrt(vif(model_1)) > 3
sqrt(vif(model_1)) < 1
### Test for autocorrelation of errors
durbinWatsonTest(modelo_1)
# Access to library
if(require(stargazer) == F) install.packages('stargazer'); require(stargazer)
if(require(readr) == F) install.packages('readr'); require(readr)
if(require(ggplot2) == F) install.packages('ggplot2'); require(ggplot2)
if(require(car) == F) install.packages('car'); require(car)
if(require(MASS) == F) install.packages('MASS'); require(MASS)
if(require(xtable) == F) install.packages('xtable'); require(xtable)
if(require(lmtest) == F) install.packages('lmtest'); require(lmtest)
if(require(tidyverse) == F) install.packages('tidyverse'); require(tidyverse)
if(require(foreign) == F) install.packages('foreign'); require(foreign)
if(require(FactoMineR) == F) install.packages('FactoMiner'); require(FactoMineR)
if(require(stats) == F) install.packages('stats'); require(stats)
if(require(reshape2) == F) install.packages('reshape2'); require(reshape2)
if(require(zoo) == F) install.packages('zoo'); require(zoo)
# Importing database into .csv format - template 1
library(readr)
analysis_data <- read_delim("analysis_data.csv",
";", escape_double = FALSE, trim_ws = TRUE)
# Importing database into .csv format - template 2
library(readr)
analysis_data_2 <- read_delim("analysis_data_2.csv",
";", escape_double = FALSE, trim_ws = TRUE)
# Importing database into .csv format - template 3
library(readr)
analysis_data_3 <- read_delim("analysis_data_3.csv",
";", escape_double = FALSE, trim_ws = TRUE)
# Importing database into .csv format - template 4
library(readr)
analysis_data_4 <- read_delim("analysis_data_4.csv",
";", escape_double = FALSE, trim_ws = TRUE)
# Rename database variables model 1
colnames(analysis_data) <- c("Civil Liberties 1", "Confidence in Government",
"Favoritism in decisions of government officials",
"Accountability", "Control of Corruption",
"Ethical behavior of firms", "Property rights",
"Political Stability", "Functioning of government",
"Cultural Diversity",
"Ethnic Fractionalization", "Language Fractionalization",
"Institucional Efficiency", "Ethnic_linguistic Plurality")
write.table(analysis_data, "analysis_data.csv", sep = ";", row.names = F)
#============
# Rename database variables model 2
colnames(analysis_data_2) <- c("Civil Liberties 1",
"Favoritism in decisions of government officials",
"Accountability", "Control of Corruption",
"Ethical behavior of firms", "Property rights",
"Political Stability", "Functioning of government",
"Cultural Diversity",
"Ethnic Fractionalization", "Language Fractionalization",
"Institucional Efficiency", "Ethnic_linguistic Plurality")
write.table(analysis_data_2, "analysis_data_2.csv", sep = ";", row.names = F)
#============
# Rename database variables model 3
colnames(analysis_data_3) <- c("Civil Liberties 2", "Confidence in Government",
"Favoritism in decisions of government officials",
"Accountability", "Control of Corruption",
"Ethical behavior of firms", "Property rights",
"Political Stability", "Functioning of government",
"Cultural Diversity",
"Ethnic Fractionalization", "Language Fractionalization",
"Institucional Efficiency", "Ethnic_linguistic Plurality")
write.table(analysis_data_3, "analysis_data_3.csv", sep = ";", row.names = F)
#============
# Rename database variables model 4
colnames(analysis_data_4) <- c("Civil Liberties 2",
"Favoritism in decisions of government officials",
"Accountability", "Control of Corruption",
"Ethical behavior of firms", "Property rights",
"Political Stability", "Functioning of government",
"Cultural Diversity",
"Ethnic Fractionalization", "Language Fractionalization",
"Institucional Efficiency", "Ethnic_linguistic Plurality")
write.table(analysis_data_4, "analysis_data_4.csv", sep = ";", row.names = F)
#=============================
# Save database models 1 through 4 with renamed variables
# model 1
write.table(analysis_data, "analysis_data.csv", sep = ";", row.names = F)
# model 2
write.table(analysis_data_2, "analysis_data_2.csv", sep = ";", row.names = F)
# model 3
write.table(analysis_data_3, "analysis_data_3.csv", sep = ";", row.names = F)
# model 4
write.table(analysis_data_4, "analysis_data_4.csv", sep = ";", row.names = F)
# Generate correlation matrix - model 1
cormat <- cor(analysis_data[, -c(1:4)])
melted_cormat <- melt(cormat)
# Correlation matrix graph - model 1
ggplot(data = melted_cormat,
aes(x=`Var1`, y=`Var2`, fill=value)) +
geom_tile()
# Factorial Analysis (PCA)
#=======================================
# Model 1
pca1 <- princomp(analysis_data[, -c(1:4)], scores=TRUE, cor=TRUE)
# Sumario do PCA
summary(pca1)
# Loading main Components
loadings(pca1)
# Checking how many factors should we use
plot(pca1) # cotovelo em 2 fatores
# Selecting the 2 factors - template 1
analysis_data$fac1 <- pca1$scores[,1]
analysis_data$fac2 <- pca1$scores[,2]
# Scree plot of eigenvalues
screeplot(pca1, type="line", main="Scree Plot")
abline(1,0, lty=2)
# Descriptive of factors 1 and 2
summary(analysis_data$`Institucional Efficiency`)
summary(analysis_data$`Ethnic_linguistic Plurality`)
ggplot(analysis_data, aes(x = `Ethnic_linguistic Plurality`, y = `Institucional Efficiency`)) +
geom_point() +
geom_vline(xintercept = 0, size =1, linetype = "dashed") +
geom_hline(yintercept = 0, size =1, linetype = "dashed") +
labs(x = "Ethnic_linguistic Plurality", y = "Institutional Efficiency")
# Multivariate Linear Regression Model 1
model_1 <- lm(`Civil Liberties 1` ~ `Confidence in Government` +
`Favoritism in decisions of government officials` +
`Accountability` +
`Institucional Efficiency` +
`Ethnic_linguistic Plurality` ,
data = analysis_data)
#=================
# Multivariate Linear Regression Model 2 - drop Confidence in Government
model_2 <- lm(`Civil Liberties 1` ~  +
`Favoritism in decisions of government officials` +
`Accountability` +
`Institucional Efficiency` +
`Ethnic_linguistic Plurality` ,
data = analysis_data_2)
#============
# Multivariate Linear Regression Model 3
model_3 <- lm(`Civil Liberties 2` ~ `Confidence in Government` +
`Favoritism in decisions of government officials` +
`Accountability` +
`Institucional Efficiency` +
`Ethnic_linguistic Plurality` ,
data = analysis_data_3)
#==============
# Multivariate Linear Regression Model 4 - drop Confidence in Government
model_4 <- lm(`Civil Liberties 2` ~  +
`Favoritism in decisions of government officials` +
`Accountability` +
`Institucional Efficiency` +
`Ethnic_linguistic Plurality` ,
data = analysis_data_4)
# Graph for the representation of the confidence intervals of the estimated coefficients - model 1
par(mfrow=c(1,1))
betas <- coefficients(model_1)
IC <-  confint(model_1, level=0.95)
y.axis <- seq(from=1, to=length(betas))
plot(betas, y.axis, type="p", pch=19, xlab="Magnitud of Coefficients", ylab="",
axes=F, xlim=c(min(IC-.4), max(IC+.4)), ylim=c(min(y.axis-.2), max(y.axis+.2)),
cex=1,yaxs="i",xaxs="i")
segments(IC[,1], y.axis, IC[,2], y.axis)
axis(1, at=seq(round(min(IC-.9)), round(max(IC+.9)), by=0.1),
labels=seq(round(min(IC-.9)), round(max(IC+.9)), by=0.1), tick=T, cex.axis=1,
mgp=c(2,.7,0))
axis(2, at=y.axis, label=names(betas), las=1, tick=T, line=-.5, cex.axis=1,
mgp=c(2,.7,0))
abline(v=0, lty=2, col="red")
# Graph for the representation of the confidence intervals of the estimated coefficients - model 2
par(mfrow=c(1,1))
betas <- coefficients(model_2)
IC <-  confint(model_2, level=0.95)
y.axis <- seq(from=1, to=length(betas))
plot(betas, y.axis, type="p", pch=19, xlab="Magnitude of Coefficients", ylab="",
axes=F, xlim=c(min(IC-.4), max(IC+.4)), ylim=c(min(y.axis-.2), max(y.axis+.2)),
cex=1,yaxs="i",xaxs="i")
segments(IC[,1], y.axis, IC[,2], y.axis)
axis(1, at=seq(round(min(IC-.9)), round(max(IC+.9)), by=0.1),
labels=seq(round(min(IC-.9)), round(max(IC+.9)), by=0.1), tick=T, cex.axis=1,
mgp=c(2,.7,0))
axis(2, at=y.axis, label=names(betas), las=1, tick=T, line=-.5, cex.axis=1,
mgp=c(2,.7,0))
abline(v=0, lty=2, col="red")
# Graph for the representation of the confidence intervals of the estimated coefficients - model 3
par(mfrow=c(1,1))
betas <- coefficients(model_3)
IC <-  confint(model_3, level=0.95)
y.axis <- seq(from=1, to=length(betas))
plot(betas, y.axis, type="p", pch=19, xlab="Magnitude of Coefficients", ylab="",
axes=F, xlim=c(min(IC-.4), max(IC+.4)), ylim=c(min(y.axis-.2), max(y.axis+.2)),
cex=1,yaxs="i",xaxs="i")
segments(IC[,1], y.axis, IC[,2], y.axis)
axis(1, at=seq(round(min(IC-.9)), round(max(IC+.9)), by=0.1),
labels=seq(round(min(IC-.9)), round(max(IC+.9)), by=0.1), tick=T, cex.axis=1,
mgp=c(2,.7,0))
axis(2, at=y.axis, label=names(betas), las=1, tick=T, line=-.5, cex.axis=1,
mgp=c(2,.7,0))
abline(v=0, lty=2, col="red")
# Graph for the representation of the confidence intervals of the estimated coefficients - model 3
par(mfrow=c(1,1))
betas <- coefficients(model_4)
IC <-  confint(model_4, level=0.95)
y.axis <- seq(from=1, to=length(betas))
plot(betas, y.axis, type="p", pch=19, xlab="Magnitude of Coefficients", ylab="",
axes=F, xlim=c(min(IC-.4), max(IC+.4)), ylim=c(min(y.axis-.2), max(y.axis+.2)),
cex=1,yaxs="i",xaxs="i")
segments(IC[,1], y.axis, IC[,2], y.axis)
axis(1, at=seq(round(min(IC-.9)), round(max(IC+.9)), by=0.1),
labels=seq(round(min(IC-.9)), round(max(IC+.9)), by=0.1), tick=T, cex.axis=1,
mgp=c(2,.7,0))
axis(2, at=y.axis, label=names(betas), las=1, tick=T, line=-.5, cex.axis=1,
mgp=c(2,.7,0))
abline(v=0, lty=2, col="red")
### Evaluating homoscedasticity ###
# Residual analysis of multivariate linear regression model 1
analysis_data$Predicted <- predict(model_1)
analysis_data$Residuo <- analysis_data$`Civil Liberties 1` - analysis_data$Predicted
# Test of the mean value of the error term equal to zero
summary(analysis_data$Residuo)
# Scatter plot of standard residues - model 1
plot(analysis_data$Predicted, analysis_data$Residuo, pch=21, bg="red", col="red")
abline(0,0, lty = 2)
### Evaluating homoscedasticity ###
# Residual analysis of multivariate linear regression model 2
analysis_data_2$Predicted <- predict(model_2)
analysis_data_2$Residuo <- analysis_data_2$`Civil Liberties 1` - analysis_data_2$Predicted
# Test of the mean value of the error term equal to zero
summary(analysis_data_2$Residuo)
# Scatter plot of standard residues - model 2
plot(analysis_data_2$Predicted, analysis_data_2$Residuo, pch=21, bg="red", col="red")
abline(0,0, lty = 2)
### Test for Collinearity ###
vif(model_1) # variance inflation factors
sqrt(vif(model_1)) > 3
sqrt(vif(model_1)) < 1
### Test for autocorrelation of errors
durbinWatsonTest(model_1)
# Correlation between the dependent variable and the factor 1 - independent variable constructed
cor(analysis_data$`Civil Liberties 1`, analysis_data$`Institucional Efficiency`)
# Correlation between the dependent variable and the factor 2 - independent variable constructed
cor(analysis_data$`Civil Liberties 1`, analysis_data$`Ethnic_linguistic Plurality`)
### Test for non-constant error variance
ncvTest(model_1)
### Test for Collinearity
vif(model_2) # variance inflation factors
sqrt(vif(model_2)) > 3
sqrt(vif(model_2)) < 1
### Test for autocorrelation of errors
durbinWatsonTest(model_2)
# Correlation between the dependent variable and the factor 1 - independent variable constructed
cor(analysis_data_2$`Civil Liberties 1`, analysis_data_2$`Institucional Efficiency`)
# Correlation between the dependent variable and the factor 2 - independent variable constructed
cor(analysis_data_2$`Civil Liberties 1`, analysis_data_2$`Ethnic_linguistic Plurality`)
### Teste para variancia do erro nao constante
ncvTest(model_2)
### Evaluating waste distribution ###
# Scatter histogram of two residues model 1
hist(analysis_data$Residuo, freq=FALSE, ylim=c(0,0.6), main="Distribution of standard errors model 1")
xfit <- seq(min(analysis_data$Residuo),max(analysis_data$Residuo),length=40)
yfit <- dnorm(xfit)
lines(xfit, yfit)
# Scatter histogram of two residues model 2
hist(analysis_data_2$Residuo, freq=FALSE, ylim=c(0,0.6), main="Distribution of standard errors model 1")
xfit <- seq(min(analysis_data_2$Residuo),max(analysis_data_2$Residuo),length=40)
yfit <- dnorm(xfit)
lines(xfit, yfit)
### Evaluating homoscedasticity ###
# Residual analysis of the multivariate linear regression model 3
analysis_data_3$Predicted <- predict(model_3)
analysis_data_3$Residuo <- analysis_data_3$`Civil Liberties 2` - analysis_data_3$Predicted
# Test of the mean value of the error term equal to zero
summary(analysis_data_3$Residuo)
# Scatter plot of two residues model 3
plot(analysis_data_3$Predicted, analysis_data_3$Residuo, pch=21, bg="red", col="red")
abline(0,0, lty = 2)
### Evaluating homoskedasticity ###
# Residual analysis of the multivariate linear regression model 4
analysis_data_4$Predicted <- predict(model_4)
analysis_data_4$Residuo <- analysis_data_4$`Civil Liberties 2` - analysis_data_4$Predicted
# Test of the mean value of the error term equal to zero
summary(analysis_data_4$Residuo)
# Scatter plot of two residues model 4
plot(analysis_data_4$Predicted
, analysis_data_4$Residuo, pch=21, bg="red", col="red")
abline(0,0, lty = 2)
### Test for Collinearity
vif(model_3) # variance inflation factors
sqrt(vif(model_3)) > 3
sqrt(vif(model_3)) < 1
### Test for autocorrelation of errors
durbinWatsonTest(model_3)
# Correlation between the dependent variable and the factor 1 - independent variable constructed
cor(analysis_data_3$`Civil Liberties 2`, analysis_data_3$`Institucional Efficiency`)
# Correlation between the dependent variable and the factor 2 - independent variable constructed
cor(analysis_data_3$`Civil Liberties 2`, analysis_data_3$`Ethnic_linguistic Plurality`)
# Test for non-constant error variance
ncvTest(model_3)
### Test for Collinearity
vif(model_4) # variance inflation factors
sqrt(vif(model_4)) > 3
sqrt(vif(model_4)) < 1
### Test for autocorrelation of errors
durbinWatsonTest(model_4)
# Correlation between the dependent variable and the factor 1 - independent variable constructed
cor(analysis_data_4$`Civil Liberties 2`, analysis_data_4$`Institucional Efficiency`)
# Correlation between the dependent variable and the factor 2 - independent variable constructed
cor(analysis_data_4$`Civil Liberties 2`, analysis_data_4$`Ethnic_linguistic Plurality`)
# Test for non-constant error variance
ncvTest(model_4)
### Evaluating waste distribution ###
# Scatter Histogram of error model 3
hist(analysis_data_3$Residuo, freq=FALSE, ylim=c(0,0.4), main="Distribution of standard error 3")
xfit <- seq(min(analysis_data_3$Residuo),max(analysis_data_3$Residuo),length=40)
yfit <- dnorm(xfit)
lines(xfit, yfit)
### Evaluating waste distribution ###
# Scatter Histogram of error model 4
hist(analysis_data_4$Residuo, freq=FALSE, ylim=c(0,0.4), main="Distribution of standard error 4")
xfit <- seq(min(analysis_data_4$Residuo),max(analysis_data_4$Residuo),length=40)
yfit <- dnorm(xfit)
lines(xfit, yfit)
# Viewing models 1 to 4
stargazer(model_1, model_2, model_3, model_4,
type = "text", title = "Model Results", style = "ajps", p.auto=FALSE)
